syntax = "proto3";
package labchain.milestones.v1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "labchain/milestones/v1/params.proto";

option go_package = "labchain/x/milestones/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/labchain/milestones/v1/params";
  }

  // List projects
  rpc Projects(QueryProjectsRequest) returns (QueryProjectsResponse) {
    option (google.api.http).get = "/labchain/milestones/v1/projects";
  }

  // Get a single project by id
  rpc Project(QueryProjectRequest) returns (QueryProjectResponse) {
    option (google.api.http).get = "/labchain/milestones/v1/projects/{id}";
  }

  // List milestones for a project
  rpc Milestones(QueryMilestonesRequest) returns (QueryMilestonesResponse) {
    option (google.api.http).get = "/labchain/milestones/v1/projects/{project_id}/milestones";
  }

  // Get treasury balance
  rpc TreasuryBalance(QueryTreasuryBalanceRequest) returns (QueryTreasuryBalanceResponse) {
    option (google.api.http).get = "/labchain/milestones/v1/treasury_balance";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// Minimal DTOs for queries (the concrete state types will be implemented in Go)

message ProjectDTO {
  uint64 id = 1;
  string title = 2;
  string budget = 3; // string coin repr
  string ipfs_hash = 4;
  uint64 v_yes = 5;
  uint64 v_no = 6;
  uint64 tranche = 7;
  string status = 8;
  string owner = 9;
}

message MilestoneDTO {
  uint64 project_id = 1;
  string hash = 2;
  repeated string attesters = 3;
}

message QueryProjectsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryProjectsResponse {
  repeated ProjectDTO projects = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryProjectRequest { uint64 id = 1; }
message QueryProjectResponse { ProjectDTO project = 1; }

message QueryMilestonesRequest {
  uint64 project_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
message QueryMilestonesResponse {
  repeated MilestoneDTO milestones = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryTreasuryBalanceRequest {}
message QueryTreasuryBalanceResponse { string balance = 1; }
